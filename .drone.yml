kind: pipeline
type: docker
name: ecsdemo-nodejs

global-variables:
  environment: &default_docker_settings 
    CONTAINER_IMAGE: "gcr.io/messaging-305213/${DRONE_REPO_NAME}"
  
steps:
  - name: test1
    image: node:8.6.0
    group: testing
    commands:
      - node -v
      
  - name: test2
    image: 'golang:1.10-alpine'
    group: testing
    commands:
      - go version
      
#  - name: build
#    image: plugins/docker
#    environment:
#      <<: *default_docker_settings
#    volumes:
#    - name: dockersock
#      path: /var/run/     
#    commands:
#      - echo Build started on `date`
#      - echo Building the Docker image...
#      - docker build -t $${CONTAINER_IMAGE}:$DRONE_COMMIT .
      #- docker tag $DOCKER_HUB_USERNAME/$PROJECT_NAME:${DRONE_COMMIT} $DOCKER_HUB_USERNAME/$PROJECT_NAME:${DRONE_COMMIT}
      
#  - name: publish
#    image: plugins/docker
#    environment:
#      <<: *default_docker_settings
#      GCR_AUTH_TOKEN:
#        from_secret: gcr_auth_token
#    volumes:
#    - name: dockersock
#      path: /var/run/        
#    commands:
#      - echo Publish started on `date`
#      - echo $GCR_AUTH_TOKEN | docker login -u _json_key --password-stdin https://gcr.io      
#      - docker push $${CONTAINER_IMAGE}:$DRONE_COMMIT
      
  - name: update.k8s.repo
    image: docker:git
    environment:
      <<: *default_docker_settings
      SSH_KEY:
        from_secret: ssh_key      
    commands:
      - echo k8s.yaml started on `date`
      - cd $(mktemp -d)
      - git config --global user.email "droneci@wavy.global"
      - mkdir -p $HOME/.ssh
      - eval `ssh-agent -s`
      - echo "$SSH_KEY" | ssh-add -
      - ssh-keyscan -t rsa github.com >> $HOME/.ssh/known_hosts
      - git clone git@github.com:ricardo-chaves-movile/kubernetes.git
      - cd kubernetes/${DRONE_REPO_NAME}
      - sed -i -- "s~image":".*~image":" $${CONTAINER_IMAGE}:$DRONE_COMMIT~g" deployment.yaml
      - git add .
      - git commit -m "updated k8s version"      
      - git push origin main
    
volumes:
- name: dockersock
  host:
    path: /var/run/
